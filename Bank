class Program
{
    static void Main()
    {
        Console.BackgroundColor = ConsoleColor.DarkGray;
        Console.ForegroundColor = ConsoleColor.Black;
        Menu menu = new Menu();
        menu.LoginMenu();
    }
}
class DisplayHelper
{
    public static void ShowMessage(string message, int displayTime = 1500)
    {
        Console.Clear();
        Console.WriteLine(message);
        Thread.Sleep(displayTime);
        Console.Clear();
    }
    public static void Pause(string message)
    {
        Console.Clear();
        Console.WriteLine(message);
        Console.WriteLine("Press any key...");
        Console.ReadKey();
        Console.Clear();
    }
}
class Menu
{
    string? choice;
    public void LoginMenu()
    {
        do
        {
            Console.Clear();
            Console.WriteLine("= MENU =");
            Console.WriteLine("1. Log in");
            Console.WriteLine("2. Sign up");
            Console.WriteLine("Q. Quit");
            Console.Write("Enter choice: ");
            choice = Console.ReadLine();
            switch (choice.Replace(" ", "").ToLower())
            {
                case "1":
                case "login":
                    break;
                case "2":
                case "signup":
                    AccountHandler.AccountCreator();
                    ShowMainMenu();
                    break;
                case "q":
                case "quit":
                    DisplayHelper.ShowMessage("Quitting...");
                    break;
            }
        } while (choice.ToLower() != "q" && choice.ToLower() != "quit");
    }
public void ShowMainMenu()
{
    do
    {
        Console.Clear();
        Console.WriteLine("= MENU =");
        Console.WriteLine("1. Deposit");
        Console.WriteLine("2. Withdraw");
        Console.WriteLine("3. View Balance");
        Console.WriteLine("4. View statement");
        Console.WriteLine("Q. Quit");
        Console.Write("Enter choice: ");
        choice = Console.ReadLine();
        switch (choice.ToLower())
        {
            case "1":
            case "deposit":
                break;
            case "2":
            case "withdraw":
                break;
            case "3":
            case "view balance":
            case "balance":
                break;
            case "4":
            case "view statement":
                break;
            default:
                DisplayHelper.ShowMessage("Invalid input, try again");
                break;
        }
    } while (choice.ToLower() != "q" && choice.ToLower() != "quit");
}
}
class Banking
{
    public static void Deposit()
    {

    }
    public static void Withdraw()
    {

    }
    public static void ViewBalance()
    {

    }
    public static void ViewStatement()
    {

    }
}

class FileHandlers
{
    private const string AccountsFolder = "Accounts";

    public static void WriteAccountFile(string username, string password, int accountNumber, int balance = 0)
    {
        if (!Directory.Exists(AccountsFolder))
        {
            Directory.CreateDirectory(AccountsFolder);
        }

        string accountDetails = $"{username} {password} {accountNumber} {balance}";
        File.AppendAllText($"{username}.txt", accountDetails);
    }
}

class AccountHandler
{
    private const string AccountsFolder = "Accounts";

    public static void AccountCreator()
    {
        Console.Clear();
        Console.Write("Enter username: ");
        string? username = Console.ReadLine();
        Console.Write("Enter Password: ");
        string password = "";
        ConsoleKeyInfo key;
        while ((key = Console.ReadKey(true)).Key != ConsoleKey.Enter)
        {
            if (key.Key == ConsoleKey.Backspace && password.Length > 0)
            {
                password = password[..^1];
                Console.Write("\b \b");
            }
            else
            {
                password += key.Key;
                Console.Write("*");
            }
        }
        Console.Write("\nConfirm Password: ");
        string? confirmPassword = "";
        while ((key = Console.ReadKey(true)).Key != ConsoleKey.Enter)
        {
            if (key.Key == ConsoleKey.Backspace && confirmPassword.Length > 0)
            {
                confirmPassword = confirmPassword[..^1];
                Console.Write("\b \b");
            }
            else
            {
                confirmPassword += key.Key;
                Console.Write("*");
            }
        }
        if (confirmPassword != password)
        {
            DisplayHelper.ShowMessage("Passwords do not match, try again");
        }
        else
        {
            DisplayHelper.ShowMessage("Account created!");
        }
    }
    public static void AccountLogin()
    {
        Console.Write("Enter username: ");
        string? username = Console.ReadLine();
        Console.Write("Enter password: ");
        string? password = "";
        ConsoleKeyInfo key;
        while ((key = Console.ReadKey(true)).Key != ConsoleKey.Enter)
        {
            if (key.Key == ConsoleKey.Backspace && password.Length > 0)
            {
                password = password[..^1];
                Console.Write("\b \b");
            }
            else
            {
                password += key.Key;
                Console.Write("*");
            }
        }
    }
}
