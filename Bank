double Balance = 0;
void UpdateAccountBalance(int AccountNumber, double NewBalance)
{
    string[] AllAccounts = File.ReadAllLines("Account.txt");
    for (int i = 0; i < AllAccounts.Length; i++)
    {
        string[] AccountDetails = AllAccounts[i].Split(' ');
        if (AccountDetails.Length == 4 && int.Parse(AccountDetails[0]) == AccountNumber)
        {
            AccountDetails[3] = NewBalance.ToString();
            AllAccounts[i] = string.Join(" ", AccountDetails);
            break;
        }
    }
    File.WriteAllLines("Account.txt", AllAccounts);
}
void BankMenu(int AccountNumber)
{
    string[] Statement = new string[5];
    int TransactionCount = 0;
    bool exit = false;
    while (!exit)
    {
        double Deposit = 0; double Withdraw = 0;
        for (int i = 0; i < 5; i++)
        {
            Console.WriteLine("= MENU =");
            Console.WriteLine("Deposit");
            Console.WriteLine("Withdraw");
            Console.WriteLine("View balance");
            Console.WriteLine("View statement of account");
            Console.WriteLine("Exit");
            string choice = Console.ReadLine();
            if (choice == "Deposit")
            {
                bool Deposited = false;
                while (Deposited == false)
                {
                    Console.WriteLine("How much would you like to deposit?");
                    Deposit = Convert.ToDouble(Console.ReadLine());
                    if (Deposit > 0)
                    {
                        Balance = Balance + Deposit;
                        Math.Round(Balance, 2, MidpointRounding.AwayFromZero);
                        UpdateAccountBalance(AccountNumber, Balance);
                        Console.WriteLine("New balance is £" + Balance);
                        Statement[TransactionCount++ % 5] = $"Deposited {Deposit}, new balance = £{Balance}";
                        Deposited = true;
                    }
                    else
                    {
                        Console.WriteLine("Invalid deposit, try again");
                    }
                }
            }
            if (choice == "Withdraw")
            {
                bool Withdrawn = false;
                while (Withdrawn == false)
                {
                    Console.WriteLine("How much would you like to withdraw?");
                    Withdraw = Convert.ToDouble(Console.ReadLine());
                    if (Withdraw < Balance)
                    {
                        Balance = Balance - Withdraw;
                        Math.Round(Balance, 2, MidpointRounding.AwayFromZero);
                        UpdateAccountBalance(AccountNumber, Balance);
                        Console.WriteLine("New balance is £" + Balance);
                        Statement[TransactionCount++ % 5] = $"Withdrew {Withdraw}, new balance = £{Balance}";
                        Withdrawn = true;
                    }
                    else if (Withdraw > Balance)
                    {
                        Console.WriteLine("Insufficient funds");
                    }
                }
            }
    if (choice == "View statement")
    {
        Console.WriteLine(Statement[0]);
        Console.WriteLine(Statement[1]);
        Console.WriteLine(Statement[2]);
        Console.WriteLine(Statement[3]);
        Console.WriteLine(Statement[4]);
    }
    if (choice == "View balance")
    {
        Console.WriteLine("Your balance is £" + Balance);
    }
    if (choice == "Exit")
        exit = true;
        }
    }
}
void AccountCreator()
{
    string Username; string Password = ""; string PasswordConfirm;
    Console.WriteLine("Enter username");
    Username = Console.ReadLine();
    bool PasswordEntered = false;
    while (PasswordEntered == false)
    {
        Console.WriteLine("Enter password");
        Password = Console.ReadLine();
        Console.WriteLine("Confirm password");
        PasswordConfirm = Console.ReadLine();
        if (Password != PasswordConfirm)
        {
            Console.WriteLine("Passwords do not match");
        }
        else
        {
            PasswordEntered = true;
        }
    }
    Console.WriteLine("Account created");
    Random rnd = new Random();
    int AccountNum = rnd.Next(000000, 999999);
    Console.WriteLine("Your account number is " + AccountNum);
    string accountDetails = $"{AccountNum} {Username} {Password} {Balance}";
    File.AppendAllText("Account.txt", accountDetails + Environment.NewLine);
    BankMenu(AccountNum);
}
void LogIn()
{
    string[] AccountDetails = File.ReadAllText("Account.txt").Split(' ');
    if (AccountDetails.Length < 4)
    {
        Console.WriteLine("Account file is corrupted or has insufficient data.");
    }
    for (int attempts = 0; attempts < 3; attempts++)
    {
        Console.WriteLine("Enter username");
        string InputUsername = Console.ReadLine();
        Console.WriteLine("Enter password");
        string InputPassword = Console.ReadLine();
        string[] AllAccounts = File.ReadAllLines("Account.txt");
        foreach (string Account in AllAccounts)
        {
            AccountDetails = Account.Split(' ');
            if (AccountDetails.Length == 4)
            {
                int AccountNumber = int.Parse(AccountDetails[0]);
                string Username = AccountDetails[1];
                string Password = AccountDetails[2];
                double AccountBalance = double.Parse(AccountDetails[3]);
                if (Username == InputUsername && Password == InputPassword)
                {
                    Console.WriteLine("Login successful!");
                    Balance = AccountBalance;
                    BankMenu(AccountNumber);
                }
                else
                {
                    Console.WriteLine("Invalid login credentials.");
                }
            }
        }
    }
    Console.WriteLine("Too many incorrect login attemps, try again later");
}
void SignUpMenu()
{
    bool Loop = true;
    while (Loop == true)
    {
        Console.WriteLine("= MENU =");
        Console.WriteLine("Sign up");
        Console.WriteLine("Log in");
        string choice = Console.ReadLine();
        if (choice == "Sign up")
        {
            AccountCreator();
            Loop = false;
        }
        if (choice == "Log in")
        {
            LogIn();
            Loop = false;
        }
        else
        {
            Console.WriteLine("Invalid input");
        }
    }
}
SignUpMenu();
